import asyncio
import os
import sys
from pathlib import Path

project_root = Path(__file__).resolve().parent
if str(project_root) not in sys.path:
    sys.path.insert(0, str(project_root))

from autobots.review_bot import ReviewBot
from bot_worker.config import PROJECT_ROOT
from bot_worker.utils import log
from myiu.app_context import AppContext

async def main_autobot_patrol():
    log.info("=============================================")
    log.info("üïµÔ∏è‚Äç‚ôÇÔ∏è Bot Tu·∫ßn tra & Giao vi·ªác (ƒê·ªôc l·∫≠p) ƒë√£ kh·ªüi ƒë·ªông.")
    log.info("=============================================")

    app_context = AppContext()
    app_context.set_service("log", log)
    review_bot_instance = ReviewBot(app_context)
    
    os.makedirs(os.path.join(PROJECT_ROOT, "tasks", "pending"), exist_ok=True)
    os.makedirs(os.path.join(PROJECT_ROOT, "tasks", "completed"), exist_ok=True)
    os.makedirs(os.path.join(PROJECT_ROOT, "tasks", "failed"), exist_ok=True)

    log.info(f"Bot Tu·∫ßn tra: B·∫Øt ƒë·∫ßu qu√©t kho l∆∞u tr·ªØ '{PROJECT_ROOT}' v√† t·∫°o g√≥i c√¥ng vi·ªác...")
    await review_bot_instance.review_repository(PROJECT_ROOT)
    log.info("Bot Tu·∫ßn tra: ƒê√£ ho√†n th√†nh vi·ªác t·∫°o g√≥i c√¥ng vi·ªác. Ki·ªÉm tra th∆∞ m·ª•c tasks/pending.")

if __name__ == "__main__":
    asyncio.run(main_autobot_patrol())
